// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model User {
    id        String   @id @default(cuid())
    name      String?
    username  String?
    email     String?  @unique
    password  String
    Order     Order[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum OrderStatus {
    fulfilled
    shipped
    awating_shipment
}

enum PhoneModel {
    iphonex
    iphone11
    iphone12
    iphone13
    iphone14
    iphone15
}

enum CaseMaterial {
    silicone
    polycarbonate
}

enum CaseFinish {
    smooth
    textured
}

enum CaseColor {
    black
    blue
    rose
}

model Configuration {
    id              String        @id @default(cuid())
    width           Int
    height          Int
    imageUrl        String
    color           CaseColor?
    model           PhoneModel?
    material        CaseMaterial?
    finish          CaseFinish?
    croppedImageUrl String?
    Order           Order[]
}

model Order {
    id              String        @id @default(cuid())
    configurationId String
    configuration   Configuration @relation(fields: [configurationId], references: [id])
    user            User          @relation(fields: [userId], references: [id])
    userId          String
    amount          Float
    isPaid          Boolean       @default(false)
    status          OrderStatus   @default(awating_shipment)

    shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
    shippingAddressId String?
    billingAddress    BillingAddress?  @relation(fields: [billingAddressId], references: [id])
    billingAddressId  String?

    createdAt DateTime @default(now())
    updated   DateTime @updatedAt
}

model ShippingAddress {
    id          String  @id @default(cuid())
    name        String
    street      String
    postalCode  String
    country     String
    state       String?
    phoneNumber String?
    oreders     Order[]
    city        String
}

model BillingAddress {
    id          String   @id @default(cuid())
    name        String
    street      String
    postalCode  String
    city        String
    country     String
    state       String?
    phoneNumber String?
    oreders     Order[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}
